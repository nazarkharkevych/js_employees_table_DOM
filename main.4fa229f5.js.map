{"version":3,"sources":["scripts/main.js"],"names":["previousHeader","employeesTable","document","querySelector","sortTable","index","wasClicked","rows","bySalary","sort","a","b","dataA","cells","innerText","dataB","normalize","data","slice","replace","localeCompare","addEventListener","e","header","target","closest","tableRow","secondClick","tableBody","cellIndex","sortedTable","children","append","classList","remove","add","newEmployeeForm","createAndPopulateForm","form","createElement","addFormInputs","addFormSelect","submitButton","type","inputData","Name","Position","Age","Salary","key","nameAttr","label","input","setAttribute","dataset","qa","required","selectLabel","insertAdjacentHTML","prepend","position","parentElement","after","runFormValidation","formData","validName","length","validAge","appendPushNotification","description","title","messageOnScreen","message","messageTitle","messageDescription","topOffset","offsetTop","offsetHeight","style","top","body","setTimeout","createNewEmployee","employeeData","tr","td","formatted","getFormattedNumber","number","parsedToDecimal","parseInt","Math","abs","thousands","numberAsString","String","decimalIndex","indexOf","wholelPart","fractionalPart","padEnd","editTableCell","cell","initialText","firstElementChild","value","cellWidth","getComputedStyle","width","parseFloat","focus","scrollWidth","min","newValue","trim","newSalary","textNode","createTextNode","replaceWith","code","blur","preventDefault","nameInput","positionInput","FormData","inputsData","Object","fromEntries","entries","isValid","newEmployee","reset","tableCell"],"mappings":"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","file":"main.4fa229f5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employeesTable = document.querySelector('table');\nlet previousHeader;\n\nemployeesTable.addEventListener('click', (e) => {\n  const header = e.target.closest('thead > tr > th');\n  const tableRow = e.target.closest('tbody > tr');\n\n  if (header) {\n    const secondClick = previousHeader === header;\n\n    const tableBody = document.querySelector('tbody');\n    const index = header.cellIndex;\n\n    const sortedTable = sortTable(tableBody.children, index, secondClick);\n\n    tableBody.append(...sortedTable);\n\n    previousHeader = header;\n\n    if (secondClick) {\n      previousHeader = null;\n    }\n  }\n\n  if (tableRow) {\n    for (const row of employeesTable.rows) {\n      row.classList.remove('active');\n    }\n\n    tableRow.classList.add('active');\n  }\n});\n\nfunction sortTable([...rows], index, wasClicked) {\n  const bySalary = index === 4;\n\n  rows.sort((a, b) => {\n    const dataA = a.cells[index].innerText;\n    const dataB = b.cells[index].innerText;\n\n    if (bySalary) {\n      const normalize = (data) => data.slice(1).replace(',', '');\n\n      return wasClicked\n        ? normalize(dataB) - normalize(dataA)\n        : normalize(dataA) - normalize(dataB);\n    }\n\n    return wasClicked\n      ? dataB.localeCompare(dataA)\n      : dataA.localeCompare(dataB);\n  });\n\n  return rows;\n}\n\nconst newEmployeeForm = createAndPopulateForm();\n\nemployeesTable.after(newEmployeeForm);\n\nfunction createAndPopulateForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  addFormInputs(form);\n\n  addFormSelect(form);\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n\n  submitButton.innerText = 'Save to table';\n\n  form.append(submitButton);\n\n  return form;\n}\n\nfunction addFormInputs(form) {\n  const inputData = {\n    Name: ['name', 'text'],\n    Position: ['position', 'text'],\n    Age: ['age', 'number'],\n    Salary: ['salary', 'number'],\n  };\n\n  for (const key in inputData) {\n    const nameAttr = 0;\n    const typeAttr = 1;\n\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    input.setAttribute('name', `${inputData[key][nameAttr]}`);\n\n    input.setAttribute('type', `${inputData[key][typeAttr]}`);\n\n    input.dataset.qa = `${inputData[key][nameAttr]}`;\n\n    input.required = true;\n\n    label.innerText = `${key}: `;\n\n    label.append(input);\n\n    form.append(label);\n  }\n}\n\nfunction addFormSelect(form) {\n  const selectLabel = document.createElement('label');\n\n  selectLabel.insertAdjacentHTML('afterbegin',\n    `\n    <select name=\"office\" data-qa=\"office\" required>\n    <option>Tokyo</option>\n    <option>Singapore</option>\n    <option>London</option>\n    <option>New York</option>\n    <option>Edinburgh</option>\n    <option>San Francisco</option>\n    </select>\n    `\n  );\n\n  selectLabel.prepend('Office: ');\n\n  form.position.parentElement.after(selectLabel);\n}\n\nnewEmployeeForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = document.querySelector('input[name=\"name\"]');\n  const positionInput = document.querySelector('input[name=\"position\"]');\n\n  nameInput.value = nameInput.value.trim();\n  positionInput.value = positionInput.value.trim();\n\n  const data = new FormData(newEmployeeForm);\n\n  const inputsData = Object.fromEntries(data.entries());\n\n  const isValid = runFormValidation(inputsData);\n\n  if (isValid) {\n    const newEmployee = createNewEmployee(inputsData);\n\n    const tBody = document.querySelector('table > tbody');\n\n    tBody.append(newEmployee);\n\n    newEmployeeForm.reset();\n  }\n});\n\nfunction runFormValidation(formData) {\n  const validName = formData['name'].length >= 4;\n  const validAge = formData['age'] >= 18 && formData['age'] <= 90;\n\n  if (!validName) {\n    const description = 'Name should consist of minimum 4 characters';\n    const title = 'Name is too short';\n\n    appendPushNotification(description, title, 'error');\n  }\n\n  if (!validAge) {\n    const description = 'Age must be not less than 18 and not greater than 90';\n    const title = 'Age is out of range';\n\n    appendPushNotification(description, title, 'error');\n  }\n\n  if (validName && validAge) {\n    const description = 'Employee added to the table';\n    const title = 'Success!';\n\n    appendPushNotification(description, title, 'success');\n\n    return true;\n  }\n}\n\nfunction appendPushNotification(description, title, type) {\n  const messageOnScreen = document.querySelector('.notification:last-of-type');\n\n  const message = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  messageTitle.classList.add('title');\n  messageTitle.innerText = title;\n\n  messageDescription.innerText = description;\n\n  if (messageOnScreen) {\n    const topOffset = messageOnScreen.offsetTop + messageOnScreen.offsetHeight;\n\n    message.style.top = topOffset + 10 + 'px';\n  }\n\n  message.classList.add('notification');\n  message.classList.add(type);\n\n  message.dataset.qa = 'notification';\n\n  message.append(messageTitle);\n  message.append(messageDescription);\n\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n}\n\nfunction createNewEmployee(employeeData) {\n  const tr = document.createElement('tr');\n\n  for (const key in employeeData) {\n    const td = document.createElement('td');\n\n    td.innerText = employeeData[key];\n\n    if (key === 'salary') {\n      const formatted = getFormattedNumber(employeeData[key]);\n\n      td.innerText = `$${formatted}`;\n    }\n\n    tr.append(td);\n  }\n\n  return tr;\n}\n\nfunction getFormattedNumber(number) {\n  const parsedToDecimal = parseInt(Math.abs(number), 10);\n\n  if (parsedToDecimal < 1000) {\n    return parsedToDecimal;\n  }\n\n  const thousands = parsedToDecimal / 1000;\n\n  const numberAsString = String(thousands);\n\n  const decimalIndex = numberAsString.indexOf('.');\n\n  if (decimalIndex === -1) {\n    return `${thousands},000`;\n  }\n\n  const wholelPart = numberAsString.slice(0, decimalIndex);\n\n  const fractionalPart = numberAsString.slice(decimalIndex + 1).padEnd(3, 0);\n\n  return `${wholelPart},${fractionalPart}`;\n}\n\nemployeesTable.addEventListener('dblclick', (e) => {\n  const tableCell = e.target.closest('tbody > tr > td');\n\n  if (tableCell) {\n    editTableCell(tableCell);\n  }\n});\n\nfunction editTableCell(cell) {\n  const cellIndex = cell.cellIndex;\n\n  const initialText = cell.innerText || cell.firstElementChild.value;\n\n  const cellWidth = getComputedStyle(cell).width;\n\n  cell.innerText = '';\n\n  let input = document.createElement('input');\n\n  if (cellIndex === 2) {\n    input = document.createElement('select');\n\n    input.insertAdjacentHTML('afterbegin', `\n    <option>Tokyo</option>\n    <option>Singapore</option>\n    <option>London</option>\n    <option>New York</option>\n    <option>Edinburgh</option>\n    <option>San Francisco</option>\n    `);\n  }\n\n  input.classList.add('cell-input');\n\n  input.value = initialText;\n\n  input.style.width = parseFloat(cellWidth) + 'px';\n\n  cell.append(input);\n\n  input.focus();\n\n  input.addEventListener('input', (e) => {\n    if (cellIndex !== 3) {\n      input.style.width = input.scrollWidth + 'px';\n    }\n\n    if (cellIndex === 3 || cellIndex === 4) {\n      input.value = input.value.replace(/[^0-9]/g, '');\n    }\n\n    if (cellIndex === 3) {\n      input.value = Math.min(input.value, 100);\n    }\n  });\n\n  input.addEventListener('blur', (e) => {\n    let newValue = e.target.value.trim();\n\n    if (cellIndex === 4) {\n      newValue = newValue.replace(/[^0-9]/g, '');\n\n      const newSalary = getFormattedNumber(newValue);\n\n      newValue = `$${newSalary || initialText.slice(1)}`;\n    }\n\n    const textNode = document.createTextNode(newValue || initialText);\n\n    input.replaceWith(textNode);\n  });\n\n  input.addEventListener('keydown', (e) => {\n    if (e.code === 'Enter') {\n      input.blur();\n    }\n  });\n}\n"]}